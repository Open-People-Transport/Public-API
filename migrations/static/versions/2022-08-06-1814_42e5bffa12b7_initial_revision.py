"""
Initial revision

Revision ID: 42e5bffa12b7
Create Date: 2022-08-06 18:14:29.617890

"""
import sqlalchemy as sa
from alembic import op


revision = "42e5bffa12b7"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cities",
        sa.Column("id", sa.String(length=14), nullable=False),
        sa.Column("full_name", sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "types",
        sa.Column("id", sa.String(length=14), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "companies",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("full_name", sa.String(length=64), nullable=True),
        sa.Column("short_name", sa.String(length=14), nullable=True),
        sa.Column("lat", sa.Numeric(precision=7, scale=5), nullable=True),
        sa.Column("lon", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("city_id", sa.String(length=14), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"], ["cities.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("lat", "lon"),
    )
    op.create_table(
        "routes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("number", sa.String(length=6), nullable=True),
        sa.Column("city_id", sa.String(length=14), nullable=True),
        sa.Column("type_id", sa.String(length=14), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"], ["cities.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["type_id"], ["types.id"], onupdate="CASCADE", ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stops",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("full_name", sa.String(length=64), nullable=True),
        sa.Column("short_name", sa.String(length=40), nullable=True),
        sa.Column("lat", sa.Numeric(precision=7, scale=5), nullable=True),
        sa.Column("lon", sa.Numeric(precision=8, scale=5), nullable=True),
        sa.Column("city_id", sa.String(length=14), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"], ["cities.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("lat", "lon"),
    )
    op.create_table(
        "route_companies",
        sa.Column("route_id", sa.Uuid(), nullable=False),
        sa.Column("company_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["route_id"], ["routes.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("route_id", "company_id"),
    )
    op.create_table(
        "route_stops",
        sa.Column("route_id", sa.Uuid(), nullable=False),
        sa.Column("stop_id", sa.Uuid(), nullable=False),
        sa.Column("distance", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["route_id"], ["routes.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["stop_id"], ["stops.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("route_id", "stop_id"),
    )
    op.create_table(
        "vehicles",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("license_plate", sa.String(length=10), nullable=True),
        sa.Column("tail_number", sa.String(length=10), nullable=True),
        sa.Column("model", sa.String(length=20), nullable=True),
        sa.Column("type_id", sa.String(length=14), nullable=True),
        sa.Column("company_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(
            ["type_id"], ["types.id"], onupdate="CASCADE", ondelete="RESTRICT"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("license_plate"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("vehicles")
    op.drop_table("route_stops")
    op.drop_table("route_companies")
    op.drop_table("stops")
    op.drop_table("routes")
    op.drop_table("companies")
    op.drop_table("types")
    op.drop_table("cities")
    # ### end Alembic commands ###
